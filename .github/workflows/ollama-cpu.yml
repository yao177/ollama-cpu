name: ollama
on:
  push:
    tags: ["*"]
    branches:
      - "main"
      - "master"
  schedule:
    - cron: '0 5 * * 0'
  pull_request:
    branches: ["**"]
env:
  # Hostname of your registry
  REGISTRY: ghcr.io
  # Image repository, without hostname and tag
  IMAGE_NAME: yao177/alpine/ollama-cpu  # 请替换为您的 GitHub 用户名
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      packages: write  # 添加此行以允许推送到 GitHub 包
    steps:
      - name: Set up Docker
        run: |
          # Build the Docker image
          mkdir -p amd64 arm64
          for arch in amd64 arm64; do
            docker run -d --platform linux/${arch} --name ollama ollama/ollama
            docker cp ollama:/usr/lib/ollama/runners/cpu ./${arch}/cpu
            docker cp ollama:/usr/lib/ollama/runners/cpu_avx ./${arch}/cpu_avx || echo "ok"
            docker cp ollama:/usr/lib/ollama/runners/cpu_avx2 ./${arch}/cpu_avx2 || echo "ok"
            docker rm -f ollama
          done
          echo "list amd64 files"
          find amd64 -ls
          echo "list arm64 files"
          find arm64 -ls
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3
      # Authenticate to the container registry
      - name: Authenticate to registry ${{ env.REGISTRY }}
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ env.SHA }}
          tags: |
            type=edge,branch=$repo.default_branch
            type=semver,pattern=v{{version}}
            type=sha,prefix=,suffix=,format=short
      # Build and push Docker image with Buildx
      # (don't push on PR, load instead)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          sbom: ${{ github.event_name != 'pull_request' }}
          provenance: ${{ github.event_name != 'pull_request' }}
          push: ${{ github.event_name != 'pull_request' }}
          load: ${{ github.event_name == 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            user/app:cache
            type=local,src=.
          cache-to: type=gha,mode=max
      - name: set tags
        run: |
          # install crane
          curl -LO https://github.com/google/go-containerregistry/releases/download/v0.20.2/go-containerregistry_Linux_x86_64.tar.gz
          tar zxvf go-containerregistry_Linux_x86_64.tar.gz
          chmod +x crane
          export VERSION=($(docker run -i --rm ${{ steps.meta.outputs.tags }} --version|awk '$1=$1' |awk '/version/{print $NF}'))
          echo $VERSION
          ./crane auth login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
          ./crane copy ${{ steps.meta.outputs.tags }} ${{ env.IMAGE_NAME }}:latest
          ./crane copy ${{ steps.meta.outputs.tags }} ${{ env.IMAGE_NAME }}:${VERSION}
          rm -f /home/runner/.docker/config.json  
